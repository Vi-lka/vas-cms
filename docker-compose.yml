version: '3'

services:
  vas-cms:
    container_name: vas-cms
    build: .
    image: vas-cms:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: vas-cmsDB
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_DEFAULT_FROM: ${SMTP_DEFAULT_FROM}
      SMTP_DEFAULT_REPLYTO: ${SMTP_DEFAULT_REPLYTO}

    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./yarn.lock:/opt/yarn.lock

      - ./.env:/opt/app/.env
      # - ./public/uploads:/opt/app/public/uploads
      - ./public:/opt/app/public
    ports:
      - '1338:1337'
    networks:
      - vas-net
    depends_on:
      - vas-cmsDB
      
  vas-cmsDB:
    container_name: vas-cmsDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:14.5-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - vas-cms-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder

    ports:
      - '5433:5432'
    networks:
      - vas-net

volumes:
  vas-cms-data:

networks:
  vas-net:
    name: vas-net
    external: true
